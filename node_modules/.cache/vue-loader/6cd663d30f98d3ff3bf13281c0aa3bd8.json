{"remainingRequest":"/Users/fabianvolkers/developer/travelbook/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fabianvolkers/developer/travelbook/src/components/UpcomingDestinations.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fabianvolkers/developer/travelbook/src/components/UpcomingDestinations.vue","mtime":1567366276697},{"path":"/Users/fabianvolkers/developer/travelbook/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/fabianvolkers/developer/travelbook/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fabianvolkers/developer/travelbook/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'UpcomingDestinations',\n  props: {\n    date: Date,\n    username: String,\n    destinations: Array,\n  },\n  data: () => ({\n      interval: \"\",\n    countdownString: \"countdown\",\n  }),\n  methods: {\n      countdown: function(timestamp){\n        // Get todays date and time\n        var now = new Date().getTime();\n\n        var countdownTime = new Date(timestamp);\n\n        // Find the distance between now and the count down date\n        var distance = countdownTime - now;\n\n        // Time calculations for days, hours, minutes and seconds\n        var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n        var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n        // return countdown string\n        //var countdownString\n            if (distance < 0) {\n                this.countdownString = \"Expired\"\n            } else {\n                this.countdownString = days + \" days \" + hours + \" hours \" + minutes + \" minutes \" + seconds + \" seconds \";\n            }\n            console.log(this.countdownString);\n      },\n\n  },\n  beforeMount(){\n      //this.countdown(this.destinations[1].date);\n      //this.$forceUpdate();\n  },\n  created(){\n      var x = setInterval(this.countdown(this.destinations[1].date), 1000);\n  }\n}\n",{"version":3,"sources":["UpcomingDestinations.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UpcomingDestinations.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-row align=\"center\">\n    \n    <v-card\n      class=\"mx-auto\"\n      max-width= 30vw\n      tile\n    >\n    <h3 id=\"countdownElem\">{{ destinations[1].name }}: {{ countdownString }}</h3>\n      <v-list>\n        <v-subheader>{{ username }}'s Upcoming Destinations</v-subheader>\n        <v-list-item-group v-model=\"destination\" color=\"primary\">\n          <v-list-item two-line\n            v-for=\"(destination, i) in destinations\"\n            :key=\"i\"\n          >\n            <v-list-item-content>\n              <v-list-item-title v-html=\"destination.name\"></v-list-item-title>\n              <v-list-item-subtitle v-html=\"destination.date\"></v-list-item-subtitle>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list-item-group>\n      </v-list>\n    </v-card>\n  </v-row>\n</template>\n\n<script>\nexport default {\n  name: 'UpcomingDestinations',\n  props: {\n    date: Date,\n    username: String,\n    destinations: Array,\n  },\n  data: () => ({\n      interval: \"\",\n    countdownString: \"countdown\",\n  }),\n  methods: {\n      countdown: function(timestamp){\n        // Get todays date and time\n        var now = new Date().getTime();\n\n        var countdownTime = new Date(timestamp);\n\n        // Find the distance between now and the count down date\n        var distance = countdownTime - now;\n\n        // Time calculations for days, hours, minutes and seconds\n        var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n        var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n        // return countdown string\n        //var countdownString\n            if (distance < 0) {\n                this.countdownString = \"Expired\"\n            } else {\n                this.countdownString = days + \" days \" + hours + \" hours \" + minutes + \" minutes \" + seconds + \" seconds \";\n            }\n            console.log(this.countdownString);\n      },\n\n  },\n  beforeMount(){\n      //this.countdown(this.destinations[1].date);\n      //this.$forceUpdate();\n  },\n  created(){\n      var x = setInterval(this.countdown(this.destinations[1].date), 1000);\n  }\n}\n</script>"]}]}